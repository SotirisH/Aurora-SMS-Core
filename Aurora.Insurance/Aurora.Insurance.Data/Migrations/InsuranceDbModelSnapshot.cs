// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Aurora.Insurance.Data.Migrations
{
    [DbContext(typeof(InsuranceDb))]
    internal class InsuranceDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aurora.Insurance.EFModel.Company",
                b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Aurora.Insurance.EFModel.Contract",
                b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CanceledDate");

                    b.Property<string>("CompanyId");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<DateTime>("ExpireDate");

                    b.Property<decimal>("GrossAmount");

                    b.Property<bool>("IsCanceled");

                    b.Property<DateTime>("IssueDate");

                    b.Property<decimal>("NetAmount");

                    b.Property<int>("PersonId");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("ReceiptNumber")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<DateTime>("StartDate");

                    b.Property<decimal>("TaxAmount");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PersonId");

                    b.HasIndex("ContractNumber", "ReceiptNumber");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("Aurora.Insurance.EFModel.Person",
                b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("BirthDate");

                    b.Property<string>("DrivingLicenceNum")
                        .HasMaxLength(50);

                    b.Property<string>("FatherName");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("TaxId");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(12);

                    b.HasKey("Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Aurora.Insurance.EFModel.Phone",
                b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("PersonId")
                        .IsRequired();

                    b.Property<int>("PhoneType");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Phone");
                });

            modelBuilder.Entity("Aurora.Insurance.EFModel.Contract",
                b =>
                {
                    b.HasOne("Aurora.Insurance.EFModel.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("Aurora.Insurance.EFModel.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Aurora.Insurance.EFModel.Phone",
                b =>
                {
                    b.HasOne("Aurora.Insurance.EFModel.Person", "Person")
                        .WithMany("Phones")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
