// <auto-generated />
using Aurora.SMS.Data;
using Aurora.SMS.EFModel.Enumerators;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Aurora.SMS.Data.Migrations
{
    [DbContext(typeof(SMSDb))]
    partial class SMSDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aurora.SMS.EFModel.Provider", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("LogoUrl");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<string>("PassWord")
                        .HasMaxLength(50);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<bool>("SupportsScheduleMessage");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("UserName")
                        .HasMaxLength(50);

                    b.HasKey("Name");

                    b.ToTable("Provider");
                });

            modelBuilder.Entity("Aurora.SMS.EFModel.SMSHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ContractId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("Message")
                        .IsRequired();

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<int?>("PersonId");

                    b.Property<DateTime?>("ProviderFeedBackDateTime");

                    b.Property<string>("ProviderFeedback");

                    b.Property<string>("ProviderMsgId")
                        .HasMaxLength(255);

                    b.Property<string>("ProviderName")
                        .IsRequired();

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("SendDateTime");

                    b.Property<Guid>("SessionId");

                    b.Property<string>("SessionName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("Status");

                    b.Property<int>("TemplateId");

                    b.HasKey("Id");

                    b.HasIndex("ProviderName");

                    b.HasIndex("TemplateId");

                    b.ToTable("SMSHistory");
                });

            modelBuilder.Entity("Aurora.SMS.EFModel.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<bool>("IsInactive");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Text")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Template");
                });

            modelBuilder.Entity("Aurora.SMS.EFModel.TemplateField", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("DataFormat")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Name");

                    b.ToTable("TemplateField");
                });

            modelBuilder.Entity("Aurora.SMS.EFModel.SMSHistory", b =>
                {
                    b.HasOne("Aurora.SMS.EFModel.Provider", "Provider")
                        .WithMany("SMSHistory")
                        .HasForeignKey("ProviderName")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Aurora.SMS.EFModel.Template", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
