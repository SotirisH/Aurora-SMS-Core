@model Aurora.SMS.Web.Models.SmsTemplate.SmsTemplateViewModel

@{
    ViewBag.Title = "CreateEdit";
}

<h2>Manage Templates</h2>


<div class="row">

    <div class="col-md-6">

        @using (Html.BeginForm("CreateEdit", "SMSTemplate",FormMethod.Post,htmlAttributes:new { id="formTemplate"}))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal well">
                <fieldset>
                    <h4>Create a new template</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model=>model.RowVersion)
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Template Text</label>
                        <div class="col-md-10">
                            <div class="form-control" contenteditable="true" id="divTemplateText"></div>
                            @Html.TextAreaFor(model => model.Text,htmlAttributes:  new { @class = "form-control hidden", id="textareaTemplateText" })
                            @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsInactive, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsInactive)
                                @Html.ValidationMessageFor(model => model.IsInactive, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-primary" />
                            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
                        </div>
                    </div>
                </fieldset>
            </div>
        }
    </div>

    <div class="col-md-6" >
        <h4>Available Data fields</h4>
        @await Component.InvokeAsync("TemplateFields", new { maxPriority = 2, isDone = false })
    </div>

</div>

@section scripts
{
    <style>
        #divTemplateText {
            height: 300px;
            overflow-y:auto ;
            max-width: 100%;
            width:100%
        }

        .alert
        {
            padding:initial;
            padding-left:4px;
            padding-right:10px;
            margin:2px;
        }
        .alert-dismissable .close, .alert-dismissible .close {
                top: initial;
                right: -4px;
            }
    </style>
    <script type="text/javascript" src="~/Scripts/SMSTemplate/CreateEdit.js"></script>
    }