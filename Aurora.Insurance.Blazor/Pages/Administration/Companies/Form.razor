@page "/administration/companies"
@page "/administration/companies/{companyId}"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>@Title</h3>
<EditForm Model="@CompanyToEdit"
          OnValidSubmit="@UpsertRecord">
    <FluentValidator></FluentValidator>
    <div class="form-group row">
        <label class="col-2 col-form-label">
            Code*
        </label>
        <div class="col-10">
            <InputText @bind-Value="CompanyToEdit.Id" class="form-control" readonly="@(!CreateMode)" />
            <ValidationMessage For="() => CompanyToEdit.Id"></ValidationMessage>
        </div>
    </div>
    <div class="form-group row">
        <label class="col-2 col-form-label">
            Description*
        </label>
        <div class="col-10">
            <InputText @bind-Value="CompanyToEdit.Description" class="form-control" />
            <ValidationMessage For="() => CompanyToEdit.Description"></ValidationMessage>
        </div>
    </div>
    <div class="float-right">
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-light" @onclick="NavigateBack">Cancel</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public string? CompanyId { get; set; }
    private EFModel.Company CompanyToEdit = new EFModel.Company();
    private bool CreateMode => CompanyId == null;
    private string Title => CreateMode ? "New Company" : $"Edit {CompanyToEdit.Description}";
    protected override async Task OnInitializedAsync()
    {
        if (CompanyId == null)
        {
            CompanyToEdit = new EFModel.Company();
            return;
        }
        else
        {
            CompanyToEdit = await Http.GetFromJsonAsync<Aurora.Insurance.EFModel.Company>($"api/companies/{CompanyId}");
        }
    }

    private async Task UpsertRecord()
    {
        HttpResponseMessage httpResponseMessage;
        if (CreateMode)
        {
                httpResponseMessage = await Http.PostAsJsonAsync("api/companies", CompanyToEdit);

        }
        else
        {
            httpResponseMessage = await Http.PutAsJsonAsync($"api/companies/{CompanyToEdit.Id}", CompanyToEdit);
        }
        NavigateBack();

    }


    private void NavigateBack()
    {
        NavigationManager.NavigateTo("/administration/companies/list");
    }

}
