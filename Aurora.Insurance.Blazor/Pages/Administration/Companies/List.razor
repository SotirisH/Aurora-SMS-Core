@page "/administration/companies/list"
@using Aurora.Insurance.EFModel
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime


<ModalDialog @ref="modal" @key="TargetCompanyToEdit">
    <Title>Confirm company deletion</Title>
    <Body>
    <p>Do you want to delete the company <b>@TargetCompanyToEdit.Description</b></p>
    </Body>
    <Footer>
        <button type="button" class="btn btn-danger" @onclick="DeleteCompany">Delete</button>
        <button type="button" class="btn btn-light" data-dismiss="modal" @onclick="() => modal.Close()">Cancel</button>
    </Footer>
</ModalDialog>

<div class="container">
    <div class="row">
        <div class="col-lg">
            <h1><i class="fas fa-building"/>Insurance companies</h1>
        </div>
        <div class="col-lg-auto">
            <button class="btn btn-primary" @onclick="AddCompany">
                Add
            </button>
        </div>
    </div>
</div>


@if (CompanyList == null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Code</th>
            <th>Description</th>
            <th>Modified</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (Company company in CompanyList)
        {
            Company currentCompany = company;
            /*
                Because currently blazor doesn't support concatenation of strings inside the values of attributes
                passed to components, we use a variable instead
                https://github.com/dotnet/aspnetcore/issues/9854
                */
            var itemRef = $"/administration/companies/{currentCompany.Id}";
            <tr>
                <td>
                    <NavLink href="@itemRef">
                        @company.Id
                    </NavLink>
                </td>
                <td>@company.Description</td>
                <td>@((company.ModifiedOn ?? company.CreatedOn).GetValueOrDefault().ToShortDateString())</td>
                <td>
                    <i class="fas fa-trash"
                       style="cursor: pointer"
                       @onclick=@(() => ConfirmDelete(currentCompany.Id))>
                    </i>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private Company[]? CompanyList;

    private ModalDialog modal;
    private Company TargetCompanyToEdit { get; set; } = new Company();

    protected override async Task OnInitializedAsync()
    {
        CompanyList = await Http.GetFromJsonAsync<Company[]>("api/companies");
    }

    private void AddCompany()
    {
        NavigationManager.NavigateTo("/administration/companies");
    }

    async Task DeleteCompany()
    {
        await Http.DeleteAsync($"api/companies/{TargetCompanyToEdit.Id}");
        modal.Close();
        await OnInitializedAsync();
    }

    void ConfirmDelete(string companyId)
    {
        TargetCompanyToEdit = CompanyList.First(x => x.Id == companyId);
        modal.Open();
    }

}
