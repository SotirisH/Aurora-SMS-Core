@page "/customers/list"
@using Aurora.Insurance.EFModel
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<ModalDialog @ref="modal" @key="TargetResourceToEdit">
    <Title>Confirm company deletion</Title>
    <Body>
    <p>Do you want to delete the customer <b>@TargetResourceToEdit.LastName</b></p>
    </Body>
    <Footer>
        <button type="button" class="btn btn-danger" @onclick="DeleteCustomer">Delete</button>
        <button type="button" class="btn btn-light" data-dismiss="modal" @onclick="() => modal.Close()">Cancel</button>
    </Footer>
</ModalDialog>

<div class="container">
    <div class="row">
        <div class="col-lg">
            <h1>Customers</h1>
        </div>
        <div class="col-lg-auto">
            <button class="btn btn-primary" @onclick="AddCustomer">
                Add
            </button>
        </div>
    </div>
</div>

@if (PersonList == null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}
else
{
    <div style=" height: auto;
        max-height: 150%;
        overflow: auto;">
        <table class="table">
            <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>

            @foreach (Person customer in PersonList)
            {
                Person currentcustomer = customer;
                var itemRef = $"/customers/{currentcustomer.Id}";
                <tr>
                    <td>
                        <NavLink href="@itemRef">
                            @currentcustomer.Id
                        </NavLink>
                    </td>
                    <td>@(currentcustomer.LastName + " " + currentcustomer.FirstName)</td>

                    <td>
                        <i class="fas fa-trash"
                           style="cursor: pointer"
                           @onclick=@(() => ConfirmDelete(currentcustomer.Id))>
                        </i>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
}

@code {
    private Person[]? PersonList;

    private ModalDialog modal { get; set; } = default!;
    private Person TargetResourceToEdit { get; } = new Person();

    protected override async Task OnInitializedAsync()
    {
        PersonList = await Http.GetFromJsonAsync<Person[]>("api/persons");
    }

    private void AddCustomer()
    {
        NavigationManager.NavigateTo("/customers/new");
    }

    async Task DeleteCustomer()
    {
    }

    void ConfirmDelete(int personId)
    {
    }

}